# Purpose: Run neo4j locally with a browser: http://localhost:7474/ with ne04j/secret
# Usage:
# $ docker compose up
# $ docker compose start neo4j
# Source: docker run --publish=7474:7474 --publish=7687:7687 -e 'NEO4J_AUTH=neo4j/secret' neo4j:4.4.8
version: '3'
# TODO: Expose services through port 80
# TODO: Use a common linux family
services:
  # http://localhost:1337/
  dashboard:
    #image: jamesread/olivetin
    build:
      context: ./dashboard/
    container_name: dashboard
    ports:
      - "1337:1337"
    volumes:
      - ./dashboard/olivetin:/config
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web
      - agent
  agent:
    depends_on:
      - dashboard
    #image: busybox:mlsk
    #image: sshd
    container_name: agent
    build:
      context: ./agent/
      #dockerfile: Dockerfile.new
    ports:
     - "22"
    volumes:
      - ./postman:/postman
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - agent
      - persistence
      - api
  neo4j:
    image: neo4j:4.3.6
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_apoc_import_file_enabled=true
      #- NEO4J_dbms_shell_enabled=true
      - NEO4J_AUTH=neo4j/secret
    #volumes:
      #- ${HOME}/neo4j/data:/data
      #- ${HOME}/neo4j/logs:/logs
      #- ${HOME}/neo4j/import:/var/lib/neo4j/import
      #- ${HOME}/neo4j/plugins:/plugins
    networks:
      - web
      - persistence
  engine:
    depends_on:
      - neo4j
    image: engine:0.0.1-SNAPSHOT
    ports:
      - "8080:8080"
    environment:
      - ODN_NEO4J_URI=bolt://neo4j:7687
      - ODN_NEO4J_AUTH_USERNAME=neo4j
      - ODN_NEO4J_AUTH_PASSWORD=secret
    #links:
    #  - neo4j
    networks:
      - web
      - persistence
      - api
networks:
  web:
    driver: bridge
  agent:
    driver: bridge
  api:
    driver: bridge
  persistence:
    driver: bridge
